# 硬链接模式的配置文件，只有两个功能：1、监控下载软件，下载完成后自动识别重命名并做硬链接/复制。2、监控目录，目录有变化时自动识别重命名和做硬链接/复制。没有UI界面，但可以保留通知。
# 配置注意要符合yaml语法，:号后有1个空格，不能使用全角标点符号
app:
  # 这个配置不要改
  simple_mode: true
  # TMDB API KEY，需要在https://www.themoviedb.org/申请，必须配置这个，否则无法识别媒体资源和重命名
  rmt_tmdbkey:

# 配置媒体库目录等信息，不能删除
media:
  # 媒体库电影文件存放目录，docker使用需要将NAS储存目录映射到以下路径
  movie_path: '/mnt/media/电影'
  # 电影是否支持二级分类：true、false，如为false则不分类，所有电影放movie_path下；如为true则按类型分别建二级目录存放，具体分类参考README.MD说明
  movie_subtypedir: true
  # 媒体库电视剧文件存放目录，docker使用需要将NAS储存目录映射到以下路径
  tv_path: '/mnt/media/电视剧'
  # 电视剧是否支持二级分类：true、false，如为false则不分类，所有电影剧放tv_path下；如为true则按类型分别建二级目录存放，具体分类参考README.MD说明
  tv_subtypedir: true

# 配置文件夹监控
sync:
  # 监控目录，可以监控多个。监控目录有文件变化时会自动进行媒体识别、转移并命名
  # 配置格式1：'源目录|目的目录'，比如：'/mnt/movie1|/mnt/mymovie'，配了目的目录时，会转移到/mnt/mymovie目的目录中，不自动区分电影或电视剧。
  # 配置格式2：'源目录'，比如：'/mnt/movie1'，目的目录不配时会自动识别是电影还是电视剧并转移到media中配置的movie_path、tv_path配置的目录中（开了自动分类的话会在该目录下进行二级目录分类）
  # 监控功能如果遇到启动报错：inotify instance limit reached，需在宿主机上命令行执行以下命令：
  # echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf
  # echo fs.inotify.max_user_instances=524288 | sudo tee -a /etc/sysctl.conf
  # sudo sysctl -p
  sync_path:
    - '/mnt/movie1|/mnt/mymovie'
    - '/mnt/movie2|/mnt/mymovie'
    - '/mnt/resiliosync/大片抢先看'
  # 监控目录文件的转移方式：LINK、COPY，LINK即硬链接并重命名，COPY是复制一份并重命名。LINK下载目录和媒体库目录在一个磁盘分区或者存储空间。
  # LINK模式如果确认是同一个盘仍然报错跨盘问题，请尝试直接映射上级目录
  sync_mod: LINK

# 配置消息通知服务，不需要可以删除
message:
  # 发送消息使用的渠道：wechat、serverchan、telegram，需在对应的配置区域配置。不使用的渠道配置可以留空或者删除。推荐使用wechat微信渠道。不设置则不启用消息服务。
  msg_channel: wechat
  wechat:
    # 【推荐】企业微信消息应用，在企业微信https://work.weixin.qq.com/中申请和新增一个自建应用。配合微信的企业微信插件，可以直接在微信中查看本程序的消息以及控制程序运行，非常好用，推荐使用该渠道。
    # corpid:每个企业都拥有唯一的corpid，获取此信息可在管理后台“我的企业”－“企业信息”下查看“企业ID”（需要有管理员权限）
    # corpsecret:自建应用secret。在管理后台->“应用与小程序”->“应用”->“自建”，点进某个应用，即可看到。
    # agentid:每个应用都有唯一的agentid。在管理后台->“应用与小程序”->“应用”，点进某个应用，即可看到agentid。
    # 具体不明白的参考企业微信的开发者中心，
    corpid:
    corpsecret:
    agentid:

  serverchan:
    # ServerChan API KEY，SCT类型，在https://sct.ftqq.com/中申请（非VIP貌似每日限制只能收到5条消息）
    sckey:

  telegram:
    # Telegram机器人，需要在Telegram中创建机器人以及获取chat_id
    telegram_token:
    telegram_chat_id:

# 配置PT下载信息，用于监控下载软件，完成后自动转移和改名，不用可删掉
pt:
  # PT下载完成后转移到媒体库的转移模式：COPY复制模式、LINK硬链接模式。复制模式下载做种和媒体库是两份，多占用存储（下载盘大小决定能保多少种），好处是媒体库的盘不用24小时运行可以休眠；硬链接模式不用额外增加存储空间，一份文件两份目录，但需要下载目录和媒体库目录在一个磁盘分区或者存储空间。两者在媒体库使用上是一致的。
  rmt_mode: LINK
  # PT下载使用的客户端软件，qbittorrent、transmission，需要配置qbittorrent或transmission对应的配置区域，使用一个后另一个配置可以删掉
  pt_client: qbittorrent
  # 是否监控PT下载：true、false，如为true则PT下载完成会自动转移和重命名，如为false则不会处理
  pt_monitor: true

# 配置qBittorrent下载软件，不用可删掉
qbittorrent:
  # qBittorrent IP地址和端口，注意如果qb启动了HTTPS证书，则需要配置为https://IP
  qbhost: 127.0.0.1
  qbport: 8080
  # qBittorrent 登录用户名和密码
  qbusername: admin
  qbpassword: adminadmin
  # 下面这两个配置问的人特别多，解释一下：save_path是nastool检索到需要新增下载时告诉qb下到哪个目录去，是传给qb的。save_containerpath是告诉nastool qb的下载路径对应在nastool里又是映射为什么路径，这样nastool才能通过这个路径访问到qb下载好的文件。
  # qBittorrent下载保存目录，如果是Docker版本的qb这个是容器内的路径。
  save_path:
  # 1、如果本程序是用Docker运行，则这个是PT下载目录对应映射到本程序Docker容器内的路径；如果本程序不是Docker运行但qb是Docker运行，则设置为PT下载目录在宿主机上的真实路径。不是以上两种情况留空即可。
  save_containerpath:

# 配置transmission下载软件，不用可删掉
transmission:
  # transmission IP地址和端口，注意如果tr启用了HTTPS证书，则需要配置为https://IP
  trhost: 127.0.0.1
  trport: 9091
  # transmission 登录用户名和密码
  trusername: admin
  trpassword: password
  # transmission下载保存目录，如果是Docker版本的tr这个是容器内的路径。
  save_path:
  # 1、如果本程序是用Docker运行，则这个是PT下载目录对应映射到本程序Docker容器内的路径；如果本程序不是Docker运行但tr是Docker运行，则设置为PT下载目录在宿主机上的真实路径。不是以上两种情况留空即可。
  save_containerpath: