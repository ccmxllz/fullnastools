# 全功能模式配置文件，适用于想做做PT下载、识别转移、保种、搭建媒体库全自动解决方案的用户，有很多附属的功能，有WEBUI控制界面
# 配置注意要符合yaml语法，:号后有1个空格，不能使用全角标点符号
app:
  # 日志记录类型：SERVER、FILE、CONSOLE，如果是使用Docker安装建议留空或者设置为CONSOLE；如果是使用群晖套件建议配置为 SERVER，可将日志输出到群晖的日志中心便于查看；如果是python本地运行建议设置为FILE，保存日志到文件。
  logtype: CONSOLE
  # 日志文件的路径，logtype为FILE时生效
  logpath: '/config/logs'
  # 群晖日志中心IP和端口，logtype为SERVER时生效。端口一般是514，只需要改动IP为群晖的IP。
  logserver: 127.0.0.1:514
  # WEB管理界面端口，默认3000
  web_port: 3000
  # WEB管理页面登录用户，默认admin
  login_user: admin
  # WEB管理页面登录用户密码，默认password，如果是全数字密码，要用''括起来
  login_password: password
  # WEB管理界面使用的HTTPS的证书和KEY的路径，留空则不启用HTTPS
  ssl_cert:
  ssl_key:
  # 存储媒体库设备的操作系统类型：Windows、Linux，用于监控目录变化。Windows类型性能比较差，会导致NAS不能休眠，除非NAS是Windows的否则都建议配置为Linux
  nas_sys: Linux
  # TMDB API KEY，需要在https://www.themoviedb.org/申请，必须配置这个，否则无法识别媒体资源和重命名
  rmt_tmdbkey:

# 配置媒体库目录等信息
media:
  # 媒体库电影文件存放目录，docker使用需要将NAS储存目录映射到以下路径
  movie_path: '/mnt/media/电影'
  # 电影是否支持自动二级分类：true、false，如为false则不分类，所有电影放movie_path下；如为true则按类型分别建二级目录存放，具体分类参考README.MD说明
  movie_subtypedir: true
  # 媒体库电视剧文件存放目录，docker使用需要将NAS储存目录映射到以下路径
  tv_path: '/mnt/media/电视剧'
  # 电视剧是否支持自动二级分类：true、false，如为false则不分类，所有电影剧放tv_path下；如为true则按类型分别建二级目录存放，具体分类参考README.MD说明
  tv_subtypedir: true

# 配置文件夹监控
sync:
  # 监控目录，可以监控多个。监控目录有文件变化时会自动进行媒体识别、转移并命名
  # 配置格式1：'源目录|目的目录'，比如：'/mnt/movie1|/mnt/mymovie'，配了目的目录时，会转移到/mnt/mymovie目的目录中，不自动区分电影或电视剧。
  # 配置格式2：'源目录'，比如：'/mnt/movie1'，目的目录不配时会自动识别是电影还是电视剧并转移到media中配置的movie_path、tv_path配置的目录中（开了自动分类的话会在该目录下进行二级目录分类）
  # 如果无法识别文件媒体信息，则会LINK到目的目录的nastool_failed目录下（COPY模式则不处理）
  # 监控功能如果遇到启动报错：inotify instance limit reached，需在宿主机上命令行执行以下命令：
  # echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf
  # echo fs.inotify.max_user_instances=524288 | sudo tee -a /etc/sysctl.conf
  # sudo sysctl -p
  sync_path:
    - '/mnt/movie1|/mnt/mymovie'
    - '/mnt/movie2|/mnt/mymovie'
    - '/mnt/resiliosync/大片抢先看'
  # 监控目录文件的转移方式：LINK、COPY，LINK即硬链接并重命名，COPY是复制一份并重命名。LINK下载目录和媒体库目录在一个磁盘分区或者存储空间。
  # LINK模式如果确认是同一个盘仍然报错跨盘问题，请尝试直接映射上级目录
  sync_mod: LINK

# 配置消息通知服务
message:
  # 发送消息使用的渠道：wechat、serverchan、telegram、bark，需在对应的配置区域配置。不使用的渠道配置可以留空或者删除。推荐使用wechat微信渠道。不设置则不启用消息服务。
  msg_channel: wechat
  # 配置了Emby webhooks插件回调时，用户播放媒体库中的媒体时会发送消息通知，本处配置哪些用户的设备不通知，避免打扰，配置格式：用户:设备名称，可用 - 增加多项
  webhook_ignore:
    - 'admin:xx的iPhone 12'
  # 【推荐】企业微信消息应用，在企业微信https://work.weixin.qq.com/中申请和新增一个自建应用。配合微信的企业微信插件，可以直接在微信中查看本程序的消息以及控制程序运行，非常好用，推荐使用该渠道。
  wechat:
    # corpid:每个企业都拥有唯一的corpid，获取此信息可在管理后台“我的企业”－“企业信息”下查看“企业ID”（需要有管理员权限）
    # corpsecret:自建应用secret。在管理后台->“应用与小程序”->“应用”->“自建”，点进某个应用，即可看到。
    # agentid:每个应用都有唯一的agentid。在管理后台->“应用与小程序”->“应用”，点进某个应用，即可看到agentid。
    # 具体不明白的参考企业微信的开发者中心，
    corpid:
    corpsecret:
    agentid:
    # 微信回调，用于在微信中控制本程序，需要在企业微信https://work.weixin.qq.com/中设置自建应用的菜单等。
    # 步聚：1、在微信企业应用接收消息设置页面生成Token和EncodingAESKey并填入下面区域。2、重启本程序。3、在微信企业应用接收消息设置页面输入此地址：http(s)://ip:3000/wechat。需要有公网IP并做好端口转发，最好要有域名。
    Token:
    EncodingAESKey:
  # ServerChan API KEY，SCT类型，在https://sct.ftqq.com/中申请（非VIP貌似每日限制只能收到5条消息）
  serverchan:
    sckey:
  # Telegram机器人，需要在Telegram中创建机器人以及获取chat_id
  telegram:
    # 机器人的Token，关注BotFather创建机器人
    telegram_token:
    # 关注getuserID获取
    telegram_chat_id:
  # Bark通知，手机上安装Bark客户端，Server可以使用默认的也可以自己搭建，自己搭建的更换为服务器地址和端口，格式：http(s)://IP:PORT。
  bark:
    # 自己搭建请更换，否则保持默认
    server: https://api.day.app
    # Bark客户端生成的KEY
    apikey:

# 配置PT RSS下载的信息
pt:
  # PT下载完成后转移到媒体库的转移模式：COPY复制模式、LINK硬链接模式。复制模式下载做种和媒体库是两份，多占用存储（下载盘大小决定能保多少种），好处是媒体库的盘不用24小时运行可以休眠；硬链接模式不用额外增加存储空间，一份文件两份目录，但需要下载目录和媒体库目录在一个磁盘分区或者存储空间。两者在媒体库使用上是一致的。
  rmt_mode: LINK
  # PT下载使用的客户端软件，qbittorrent、transmission，需要配置qbittorrent或transmission对应的配置区域
  pt_client: qbittorrent
  # 是否监控PT下载：true、false，如为true则PT下载完成会自动转移和重命名，如为false则不会处理
  pt_monitor: true
  # 是否只下载有中文媒体信息的种子（开了只会下themoviedb有中文描述的影视资源）
  rss_chinese: false
  # PT站每日签到的时间，注意一定要加引号
  ptsignin_cron: '8:00'
  # PT做种时间，做种超过该时间则会自动删种（包括已下载的文件），单位是秒。如果是使用COPY模式，这个根据PT下载盘的大小配置，如果是使用LINK模式，这个可以不配，不配置或者配置为0则不启用删种功能。
  pt_seeding_time:
  # RSS检查时间间隔，即每隔多长时间检查一下各PT站是否有资源更新，建议不要少于10分钟，单位时间为秒。
  pt_check_interval: 1800
  # RSS订阅过滤关键字，可以为正式表达式，也可以是种子名称的关键字比如2022，也可以是电影、电视剧的真实名称，'.*'则为全部下载。程序会用这个配置去匹配种子文件名和识别后的标题，匹配到则会自动下载，
  # 电影的订阅关键字
  movie_keys:
    - '2022'
    - '这个杀手不太冷静'
  # 电视剧的订阅关键字
  tv_keys:
    - '国王排名'
    - '进击的巨人'
  # PT站的信息，理论上支持所有PT站点，可按pthome示例格式增加其他站点的配置，URL、Cookie等注意加引号，不然容易造成格式错误。
  # 配置在前面的站点，在下载资源时会优先选择
  sites:
    pthome:
      # RSS订阅源URL，可以是点击PT站点RSS图标获取，注意不要选中类型、小标题等内容，避免干扰识别，有新出资源时自动匹配下载；也可以是PT站的购物车/下载框的链接（部分站点才有）。
      rssurl:
      # PT站用户签到的Url，一般为mybonus.php或attendance.php，即PT站点签到按钮跳转的页面，不配置则不启用签到功能
      signin_url: 'https://pthome.net/attendance.php'
      # PT站的Cookie，需要在浏览器中F12->网络 页抓取，具体操作可百度，未配置则无法进行PT签到
      cookie:
      # 下载哪些类型的资源：BluRay、4k（包括了2160p）、1080p、720p、WEB-DL等等，按先后顺序配置，配在前面的优先级高。留空则不过滤
      res_type:
        - 4k
        - 1080p
        - BluRay

# 配置Jackett检索器，通过微信发送关键字，实时检索下载，发送格式示例：西部世界、西部世界第1季、西部世界第1季第2集。不需要可以删掉。
jackett:
  # Jackett配置页面右上角复制API Key
  api_key:
  # Jackett Indexer中添加索引器，选择“Copy Torznab Feed”生成链接填入，可以配置多个，配置上的就会参与检索(注意最后要带/)
  # 配置多条记录时，先后顺序会决定检索顺序，匹配到第一项符合时则停止并下载
  indexers:
    - https://IP:9117/api/v2.0/indexers/mteamtp/results/torznab/
  # 下载哪些类型的资源，只支持这些字典：BluRay、4k（包括了2160p）、1080p、720p，按先后顺序配置，配在前面的优先级高。留空则不过滤
  res_type:
    - 4k
    - 1080p
    - BluRay

# 配置qBittorrent下载软件
qbittorrent:
  # qBittorrent IP地址和端口，注意如果qb启动了HTTPS证书，则需要配置为https://IP
  qbhost: 127.0.0.1
  qbport: 8080
  # qBittorrent 登录用户名和密码
  qbusername: admin
  qbpassword: adminadmin
  # 下面这两个配置问的人特别多，解释一下：save_path是nastool检索到需要新增下载时告诉qb下到哪个目录去，是传给qb的。save_containerpath是告诉nastool qb的下载路径对应在nastool里又是映射为什么路径，这样nastool才能通过这个路径访问到qb下载好的文件。
  # qBittorrent下载保存目录，如果是Docker版本的qb这个是容器内的路径。
  save_path:
  # 1、如果本程序是用Docker运行，则这个是PT下载目录对应映射到本程序Docker容器内的路径；如果本程序不是Docker运行但qb是Docker运行，则设置为PT下载目录在宿主机上的真实路径。不是以上两种情况留空即可。
  save_containerpath:

# 配置transmission下载软件 需要3.0以上版本，否则可能会报错
transmission:
  # transmission IP地址和端口，注意如果tr启用了HTTPS证书，则需要配置为https://IP
  trhost: 127.0.0.1
  trport: 9091
  # transmission 登录用户名和密码
  trusername: admin
  trpassword: password
  # transmission下载保存目录，如果是Docker版本的tr这个是容器内的路径。
  save_path:
  # 1、如果本程序是用Docker运行，则这个是PT下载目录对应映射到本程序Docker容器内的路径；如果本程序不是Docker运行但tr是Docker运行，则设置为PT下载目录在宿主机上的真实路径。不是以上两种情况留空即可。
  save_containerpath: