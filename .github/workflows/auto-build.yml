name: Nas-tools Auto Build

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: [ master ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build the docker image
      run: |
        docker build . --file Dockerfile --tag jxxghp/nas-tools:latest
        mv synology/ui ./
        tar -zcvf package.tgz *.py *.txt monitor/ rmt/ scheduler/ message/ web/ ui/
        mkdir spk
        mv package.tgz synology/conf synology/scripts/ synology/CHANGELOG synology/INFO synology/*.PNG synology/*.asc spk/
        cd spk/
        tar -cvf nastool_dsm_6.x.spk *

    - name: Login to registry
      run: docker login --username=${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}

    - name: Push image
      run: docker push jxxghp/nas-tools:latest

    - uses: dev-drprasad/delete-tag-and-release@v0.2.0
      with:
        delete_release: true
        tag_name: Synology
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: Synology
        release_name: Synology
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: spk/nastool_dsm_6.x.spk
        asset_name: nastool_dsm_6.x.spk
        asset_content_type: application/gzip
